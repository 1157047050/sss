<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.mapper.FirmMapper">
  <resultMap id="BaseResultMap" type="com.ssm.entity.Firm">
    <id column="fid" jdbcType="INTEGER" property="fid" />
    <result column="fname" jdbcType="VARCHAR" property="fname" />
    <result column="ftrade" jdbcType="VARCHAR" property="ftrade" />
  </resultMap>
  
  
  
  <resultMap id="FirmMap" type="com.ssm.entity.Firm" extends="BaseResultMap">
  	<collection property="territorys" ofType="com.ssm.entity.FirmTerritoryKey">
  		<id column="fid" jdbcType="INTEGER" property="fid" />
    	<id column="tid" jdbcType="INTEGER" property="tid" />
  		<association property="territory" javaType="com.ssm.entity.Territory">
  			<id column="tid" jdbcType="INTEGER" property="tid" />
    		<result column="tname" jdbcType="VARCHAR" property="tname" />
  		</association>
  	</collection>
  </resultMap>
  
  <select id="list" parameterType="com.ssm.helper.PageTerminal" resultMap="FirmMap">
  	select * (select * from firm limit #{start}, #{end}) f
  	left join firm_territory on ft f.fid=ft.fid
  	left join territory on t ft.tid=t.tid
  	order by fid
  </select>
  
  <select id="count" parameterType="com.ssm.helper.PageTerminal" resultType="int">
  	select count(fid) from firm
  </select>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    fid, fname, ftrade
  </sql>
  <select id="selectByExample" parameterType="com.ssm.entity.FirmExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from firm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from firm
    where fid = #{fid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from firm
    where fid = #{fid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.entity.FirmExample">
    delete from firm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.entity.Firm">
    insert into firm (fid, fname, ftrade
      )
    values (#{fid,jdbcType=INTEGER}, #{fname,jdbcType=VARCHAR}, #{ftrade,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.entity.Firm">
    insert into firm
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        fid,
      </if>
      <if test="fname != null">
        fname,
      </if>
      <if test="ftrade != null">
        ftrade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="fname != null">
        #{fname,jdbcType=VARCHAR},
      </if>
      <if test="ftrade != null">
        #{ftrade,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.entity.FirmExample" resultType="java.lang.Long">
    select count(*) from firm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update firm
    <set>
      <if test="record.fid != null">
        fid = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.fname != null">
        fname = #{record.fname,jdbcType=VARCHAR},
      </if>
      <if test="record.ftrade != null">
        ftrade = #{record.ftrade,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update firm
    set fid = #{record.fid,jdbcType=INTEGER},
      fname = #{record.fname,jdbcType=VARCHAR},
      ftrade = #{record.ftrade,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.entity.Firm">
    update firm
    <set>
      <if test="fname != null">
        fname = #{fname,jdbcType=VARCHAR},
      </if>
      <if test="ftrade != null">
        ftrade = #{ftrade,jdbcType=VARCHAR},
      </if>
    </set>
    where fid = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.entity.Firm">
    update firm
    set fname = #{fname,jdbcType=VARCHAR},
      ftrade = #{ftrade,jdbcType=VARCHAR}
    where fid = #{fid,jdbcType=INTEGER}
  </update>
</mapper>